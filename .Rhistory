mat_SnapATAC <- run_SnapATAC_normalize(se)
fm_SnapATAC = run_SnapATAC(mat_SnapATAC,num_pcs=10)
mem_difference[[2]] = mem_used() - start_mem
##Scasat
start_mem  = mem_used()
run_Scasat <- function(se){
binary_mat = as.matrix((assays(se)$counts > 0) + 0)
binary_mat = Matrix(binary_mat, sparse = TRUE)
SingleCell.Binary.Jaccard <- jaccard(as.matrix(binary_mat))
fit <- cmdscale(as.dist(SingleCell.Binary.Jaccard),eig=TRUE, k=10)
fm_Scasat = t(fit$points)
return(fm_Scasat)
}
fm_Scasat <- run_Scasat(se)
mem_difference[[3]] = mem_used() - start_mem
##Signac
start_mem  = mem_used()
colnames(doc_voc) = label.mat
rownames(doc_voc) = 1:nrow(doc_voc)
Obj <- CreateSeuratObject(
counts = doc_voc
)
Obj <- RunTFIDF(Obj)
Obj <- FindTopFeatures(Obj, min.cutoff = 'q0')
Obj <- RunSVD(Obj)
fm_Signac = t(Obj@reductions$lsi@cell.embeddings[,2:30])
mem_difference[[4]] = mem_used() - start_mem
##RA3
start_mem  = mem_used()
RA3 = runRA3(doc_voc,bulk_mat)
mem_difference[[5]] = mem_used() - start_mem
return(result = mem_difference)
}
mem_500 = baseline(sc_data_500,data_donorBM0828$bulk.mat,label_mat_500)
mem_500
save(mem_500,file = "mem_500.Rdata")
mem_1000 = baseline(sc_data_1000,data_donorBM0828$bulk.mat,label_mat_1000)
mem_2000 = baseline(sc_data_2000,data_donorBM0828$bulk.mat,label_mat_2000)
mem_3000 = baseline(sc_data_3000,data_donorBM0828$bulk.mat,label_mat_3000)
mem_3000
mem_2000
mem_1000
mem_5000 = baseline(sc_data_3000,data_donorBM0828$bulk.mat,label_mat_5000)
mem_5000 = baseline(sc_data_5000,data_donorBM0828$bulk.mat,label_mat_5000)
baseline = function(doc_voc,bulk_mat,label.mat){
mem_difference = list()
se <- SummarizedExperiment(
colData = DataFrame(unlist(label.mat)),
assays = list(counts = doc_voc)
)
##Cusanovich2018
start_mem  = mem_used()
run_Cusanovich2018_normalize <- function(se){
binary_mat = as.matrix((assays(se)$counts > 0) + 0)
binary_mat = Matrix(binary_mat, sparse = TRUE)
ncounts = binary_mat
nfreqs = t(t(ncounts) / Matrix::colSums(ncounts))
idf = as(log(1 + ncol(ncounts) / Matrix::rowSums(ncounts)), "sparseVector")
tf_idf_counts = as(Diagonal(x=as.vector(idf)), "sparseMatrix") %*% nfreqs
return(tf_idf_counts)
}
run_Cusanovich2018 <- function(mat_Cusanovich2018,num_pcs=10){
fm_Cusanovich2018 = run_pca(mat_Cusanovich2018,num_pcs = num_pcs)
return(fm_Cusanovich2018)
}
mat_Cusanovich2018 <- run_Cusanovich2018_normalize(se)
fm_Cusanovich2018 = run_Cusanovich2018(mat_Cusanovich2018,num_pcs=10)
mem_difference[[1]] = mem_used() - start_mem
##SnapATAC
start_mem  = mem_used()
calJaccard <- function(X_i, X_j){
A = Matrix::tcrossprod(X_i, X_j);
bi = Matrix::rowSums(X_i);
bj = Matrix::rowSums(X_j);
jmat = as.matrix(A / (replicate(ncol(A), bi) + t(replicate(nrow(A), bj)) - A));
return(jmat);}
normJaccard <- function(jmat, b1, b2, method, k=15){
# estimate the expected jaccard index using OVN
#' @importFrom raster focal raster
.normOVN <- function(o, p1, p2, k){
# sort the jaccard index matrix based on the coverage
ind1 = order(p1);
ind2 = order(p2);
o_srt = as.matrix(o[ind1, ind2, drop=FALSE]);
# calculate expected jaccard index
mask_mat <- matrix(1, k, k);
exp = focal(raster(as.matrix(o_srt)), mask_mat, mean, na.rm=TRUE, pad = T);
ee = raster::as.matrix(exp)[order(ind1),order(ind2),drop=FALSE];
return(ee)
}
# estimate the expected jaccard index using OVE
.normOVE <- function(o, p1, p2, k){
pp = tcrossprod(p1, p2);
ss = matrix(rep(p1,each=length(p2)), ncol=length(p2), byrow=TRUE) +  matrix(rep(p2, each=length(p1)), ncol=length(p2), byrow=FALSE)
ee = pp/(ss - pp)
return(ee)
}
jmat[jmat == 1] = mean(jmat);
x = jmat;
emat = eval(parse( text = paste(".", method, "(x, b1, b2, k)", sep="")));
if(method == "normOVE"){
data = data.frame(x=c(emat), y=c(jmat))
model = stats::lm(y ~ x, data)
nmat = matrix(model$residuals, nrow(emat), ncol(emat));
}else if(method == "normOVN"){
nmat = jmat - emat;
}
rm(jmat)
rm(emat)
return(nmat);
}
run_SnapATAC_normalize <- function(se){
binary_mat = as.matrix((assays(se)$counts > 0) + 0)
binary_mat = Matrix(binary_mat, sparse = TRUE)
mat.use = t(binary_mat)
# max.var = min(1000, nrow(mat.use));
set.seed(2019)
# mat.ref = mat.use[sort(sample(seq(nrow(mat.use)), max.var)),]
mat.ref = mat.use
jmat = calJaccard(mat.use, mat.ref)
p1<- Matrix::rowMeans(mat.use);
p2<- Matrix::rowMeans(mat.ref);
nmat <- normJaccard(jmat=jmat, b1=p1, b2=p2, method = 'normOVE', k=15);
args <- list(A=nmat, nv=50)
args$center <- colMeans(nmat)
x.norm = sweep(args$A, 2, args$center, FUN=`-`)
return(x.norm)
}
run_SnapATAC <- function(mat_SnapATAC,num_pcs=10){
fm_SnapATAC = run_pca(mat_SnapATAC,num_pcs = num_pcs)
return(fm_SnapATAC)
}
mat_SnapATAC <- run_SnapATAC_normalize(se)
fm_SnapATAC = run_SnapATAC(mat_SnapATAC,num_pcs=10)
mem_difference[[2]] = mem_used() - start_mem
##Scasat
start_mem  = mem_used()
run_Scasat <- function(se){
binary_mat = as.matrix((assays(se)$counts > 0) + 0)
binary_mat = Matrix(binary_mat, sparse = TRUE)
SingleCell.Binary.Jaccard <- jaccard(as.matrix(binary_mat))
fit <- cmdscale(as.dist(SingleCell.Binary.Jaccard),eig=TRUE, k=10)
fm_Scasat = t(fit$points)
return(fm_Scasat)
}
fm_Scasat <- run_Scasat(se)
mem_difference[[3]] = mem_used() - start_mem
##Signac
start_mem  = mem_used()
colnames(doc_voc) = label.mat
rownames(doc_voc) = 1:nrow(doc_voc)
Obj <- CreateSeuratObject(
counts = doc_voc
)
Obj <- RunTFIDF(Obj)
Obj <- FindTopFeatures(Obj, min.cutoff = 'q0')
Obj <- RunSVD(Obj)
fm_Signac = t(Obj@reductions$lsi@cell.embeddings[,2:30])
mem_difference[[4]] = mem_used() - start_mem
##RA3
#start_mem  = mem_used()
#RA3 = runRA3(doc_voc,bulk_mat)
#mem_difference[[5]] = mem_used() - start_mem
return(result = mem_difference)
}
mem_5000 = baseline(sc_data_5000,data_donorBM0828$bulk.mat,label_mat_5000)
mem_5000
s7 = sample(1:533,10000,replace = T)
s8 = sample(1:533,15000,replace = T)
sc_data_10000 = data_donorBM0828$Y[,s7]
label_mat_10000 = unlist(data_donorBM0828$label.mat)[s7]
sc_data_15000 = data_donorBM0828$Y[,s8]
label_mat_15000 = unlist(data_donorBM0828$label.mat)[s8]
mem_10000 = baseline(sc_data_10000,data_donorBM0828$bulk.mat,label_mat_10000)
load("D:/research/RefTM_review/pvalue.Rdata")
pvalue[,1]
sort(pvalue[,1])[1000]
sort(pvalue[,2])[1000]
sort(pvalue[,3])[1000]
sort(pvalue[,4])[1000]
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
time <- c(c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(0.4119000,1.017279,1.948795,3.251323,8.151518,16.357612,26.346677,44.3451615)
,c(0.7559071,1.893939,6.638138,10.768193,32.314081,52.314081,1.432456*60,1.923246*60),c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455)
,c(21.13569,36.79268,1.203131*60,1.410666*60,2.668866*60,4.864975*60,6.835746*60,8.723412*60),c(2.6236236,5.929470,23.277721,58.607537,2.202655*60,4.322341*60,5.932356*60,7.2314145*60),c(14.79699,20.30331,33.49413,47.34737,1.017999*60,1.823722*60,3.406611*60,5.623511*60),c(12.91489,19.08114,37.55844,47.44161,1.260444*60,3.320071*60,4.285228*60,6.281603*60))
df = data.frame(time = time, cells = cells,type = type)
f7 = ggplot(data = df, mapping = aes(x = cells, y = time, colour = type)) + geom_line()
library(ggplot2)
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
time <- c(c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(0.4119000,1.017279,1.948795,3.251323,8.151518,16.357612,26.346677,44.3451615)
,c(0.7559071,1.893939,6.638138,10.768193,32.314081,52.314081,1.432456*60,1.923246*60),c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455)
,c(21.13569,36.79268,1.203131*60,1.410666*60,2.668866*60,4.864975*60,6.835746*60,8.723412*60),c(2.6236236,5.929470,23.277721,58.607537,2.202655*60,4.322341*60,5.932356*60,7.2314145*60),c(14.79699,20.30331,33.49413,47.34737,1.017999*60,1.823722*60,3.406611*60,5.623511*60),c(12.91489,19.08114,37.55844,47.44161,1.260444*60,3.320071*60,4.285228*60,6.281603*60))
df = data.frame(time = time, cells = cells,type = type)
f7 = ggplot(data = df, mapping = aes(x = cells, y = time, colour = type)) + geom_line()
f7
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
time <- c(c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(0.4119000,1.017279,1.948795,3.251323,8.151518,16.357612,26.346677,44.3451615)
,c(0.7559071,1.893939,6.638138,10.768193,32.314081,52.314081,1.432456*60,1.923246*60),c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455)
,c(21.13569,36.79268,1.203131*60,1.410666*60,2.668866*60,4.864975*60,6.835746*60,8.723412*60),c(2.6236236,5.929470,23.277721,58.607537,2.202655*60,4.322341*60,5.932356*60,7.2314145*60),c(14.79699,20.30331,33.49413,47.34737,1.017999*60,1.823722*60,3.406611*60,5.623511*60),c(12.91489,19.08114,37.55844,47.44161,1.260444*60,3.320071*60,4.285228*60,6.281603*60))
df = data.frame(time = time, cells = cells,type = type)
f7 = ggplot(data = df, mapping = aes(x = cells, y = time, colour = type)) + geom_line()
f7
length(time)
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
time <- c(c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(0.4119000,1.017279,1.948795,3.251323,8.151518,16.357612,26.346677,44.3451615)
,c(0.7559071,1.893939,6.638138,10.768193,32.314081,52.314081,1.432456*60,1.923246*60),c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(1.2592700,2.257477,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455)
,c(21.13569,36.79268,1.203131*60,1.410666*60,2.668866*60,4.864975*60,6.835746*60,8.723412*60),c(2.6236236,5.929470,23.277721,58.607537,2.202655*60,4.322341*60,5.932356*60,7.2314145*60),c(14.79699,20.30331,33.49413,47.34737,1.017999*60,1.823722*60,3.406611*60,5.623511*60),c(12.91489,19.08114,37.55844,47.44161,1.260444*60,3.320071*60,4.285228*60,6.281603*60))
df = data.frame(time = time, cells = cells,type = type)
f7 = ggplot(data = df, mapping = aes(x = cells, y = time, colour = type)) + geom_line()
f7
load("D:/research/LDASVI/lda.svi-master/aaa3.0/time_500.Rdata")
time_500
library(data.table)
library(dplyr)
library(BuenColors)
library(stringr)
library(cowplot)
library(SummarizedExperiment)
library(chromVAR)
library(BSgenome.Hsapiens.UCSC.hg19)
library(JASPAR2016)
library(motifmatchr)
library(GenomicRanges)
library(irlba)
library(cicero)
library(umap)
library(cisTopic)
library(prabclus)
library(BrockmanR)
library(jackstraw)
library(Matrix)
run_Scasat <- function(se){
binary_mat = as.matrix((assays(se)$counts > 0) + 0)
binary_mat = Matrix(binary_mat, sparse = TRUE)
SingleCell.Binary.Jaccard <- jaccard(as.matrix(binary_mat))
fit <- cmdscale(as.dist(SingleCell.Binary.Jaccard),eig=TRUE, k=10)
fm_Scasat = t(fit$points)
return(fm_Scasat)
}
fm_Scasat <- run_Scasat(se)
mem_difference[[3]] = mem_used() - start_mem
##Signac
start_mem  = mem_used()
colnames(doc_voc) = label.mat
rownames(doc_voc) = 1:nrow(doc_voc)
Obj <- CreateSeuratObject(
counts = doc_voc
)
Obj <- RunTFIDF(Obj)
Obj <- FindTopFeatures(Obj, min.cutoff = 'q0')
Obj <- RunSVD(Obj)
fm_Signac = t(Obj@reductions$lsi@cell.embeddings[,2:30])
library(pypr)
library(pryr)
se <- SummarizedExperiment(
colData = DataFrame(unlist(data$label.mat)),
assays = list(counts = t(data$doc.voc))
)
run_pca <- function(mat,num_pcs=50,remove_first_PC=FALSE,scale=FALSE,center=FALSE){
set.seed(2019)
SVD = irlba(mat, num_pcs, num_pcs,scale=scale,center=center)
sk_diag = matrix(0, nrow=num_pcs, ncol=num_pcs)
diag(sk_diag) = SVD$d
if(remove_first_PC){
sk_diag[1,1] = 0
SVD_vd = (sk_diag %*% t(SVD$v))[2:num_pcs,]
}else{
SVD_vd = sk_diag %*% t(SVD$v)
}
return(SVD_vd)
}
set.seed(2022)
s1 = sample(1:533,250,replace = T)
s2 = sample(1:533,500,replace = T)
s3 = sample(1:533,1000,replace = T)
s4 = sample(1:533,2000,replace = T)
s5 = sample(1:533,3000,replace = T)
s6 = sample(1:533,5000,replace = T)
sc_data_500 = data_donorBM0828$Y[,s2]
label_mat_500 = unlist(data_donorBM0828$label.mat)[s2]
sc_data_1000 = data_donorBM0828$Y[,s3]
label_mat_1000 = unlist(data_donorBM0828$label.mat)[s3]
sc_data_2000 = data_donorBM0828$Y[,s4]
label_mat_2000 = unlist(data_donorBM0828$label.mat)[s4]
library(R.matlab)
####load data
path <- ("C:/Users/TEMP.LAPTOP-E3SPELVB.000/OneDrive - The Chinese University of Hong Kong/study/research/RefLDA/data")
pathname5<- file.path(path, "Y_donorBM0828.mat")
data_donorBM0828 <- readMat(pathname5)
sc_data_500 = data_donorBM0828$Y[,s2]
label_mat_500 = unlist(data_donorBM0828$label.mat)[s2]
sc_data_1000 = data_donorBM0828$Y[,s3]
label_mat_1000 = unlist(data_donorBM0828$label.mat)[s3]
sc_data_2000 = data_donorBM0828$Y[,s4]
label_mat_2000 = unlist(data_donorBM0828$label.mat)[s4]
se <- SummarizedExperiment(
colData = DataFrame(unlist(data_donorBM0828$label.mat)),
assays = list(counts = sc_data_500)
)
se <- SummarizedExperiment(
colData = DataFrame(label_mat_500),
assays = list(counts = sc_data_500)
)
time = Sys.time()
run_Scasat <- function(se){
binary_mat = as.matrix((assays(se)$counts > 0) + 0)
binary_mat = Matrix(binary_mat, sparse = TRUE)
SingleCell.Binary.Jaccard <- jaccard(as.matrix(binary_mat))
fit <- cmdscale(as.dist(SingleCell.Binary.Jaccard),eig=TRUE, k=10)
fm_Scasat = t(fit$points)
return(fm_Scasat)
}
fm_Scasat <- run_Scasat(se)
Sys.time() - time
se <- SummarizedExperiment(
colData = DataFrame(label_mat_1000),
assays = list(counts = sc_data_1000)
)
time = Sys.time()
run_Scasat <- function(se){
binary_mat = as.matrix((assays(se)$counts > 0) + 0)
binary_mat = Matrix(binary_mat, sparse = TRUE)
SingleCell.Binary.Jaccard <- jaccard(as.matrix(binary_mat))
fit <- cmdscale(as.dist(SingleCell.Binary.Jaccard),eig=TRUE, k=10)
fm_Scasat = t(fit$points)
return(fm_Scasat)
}
fm_Scasat <- run_Scasat(se)
Sys.time() - time
##figure 7
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
time <- c(c(6.2592700/60,25.257477/60,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(0.4119000,1.017279,1.948795,3.251323,8.151518,16.357612,26.346677,44.3451615)
,c(0.7559071,1.893939,6.638138,10.768193,32.314081,52.314081,1.432456*60,1.923246*60),c(3.0558748,4.924836,6.725978,8.611932,14.846261,31.433512,45.224552,1.232144*60),c(3.2558748,6.24836,8.725978,11.611932,19.846261,41.433512,55.224552,1.432144*60)
,c(21.13569,36.79268,1.203131*60,1.410666*60,2.668866*60,4.864975*60,6.835746*60,8.723412*60),c(2.6236236,5.929470,23.277721,58.607537,2.202655*60,4.322341*60,5.932356*60,7.2314145*60),c(14.79699,20.30331,33.49413,47.34737,1.017999*60,1.823722*60,3.406611*60,5.623511*60),c(12.91489,19.08114,37.55844,47.44161,1.260444*60,3.320071*60,4.285228*60,6.281603*60))
df = data.frame(time = time, cells = cells,type = type)
f7 = ggplot(data = df, mapping = aes(x = cells, y = time, colour = type)) + geom_line()
ggsave(plot=f7,height=6,width=15,dpi=200, filename="~/f7.pdf", useDingbats=FALSE)
f7
f7
sort(pvalue[,1])[1000]
sort(pvalue[,1])[1]
sort(pvalue[,1])[2]
sort(pvalue[,1])[3]
sort(pvalue[,1])[4]
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
mem <-c(c(44.6/1024,88.6/1024,177/1024,265/1024,443/1024,765/1024,1120/1024,1620/1024),c(14.7,28.1,59.4,86.4,147,435,577,827),c(2.04,8.08,32.2,72.2,200,510,810,1202)
,c(60.7,88,152,207,335,677,823,1100),c(62.7,89,154,217,365,697,913,1200),c(115/1024,170/1024,246/1024,318/1024,366/1024,5.1,7.2,12.3),c(79.6,152,296,440,734,1320,1755.6,2440),c(26.1,26.7,28,29.3,32,38.5,45.1,55.2),c(47.3,56.4,74.5,85.4,112,320,327,603))
df = data.frame(mem = mem, cells = cells,type = type)
s8 = ggplot(data = df, mapping = aes(x = cells, y = mem, colour = type)) + geom_line()
ggsave(plot=s8,height=6,width=15,dpi=200, filename="~/s8.pdf", useDingbats=FALSE)
load("D:/research/RefTM_review/qvalue.Rdata")
View(qvalue[,1])
sort(qvalue[,1])[1000]
sort(qvalue[,2])[1000]
sort(qvalue[,3])[1000]
sort(qvalue[,4])[1000]
sort(qvalue[,4])[100]
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
time <- c(c(6.2592700/60,25.257477/60,1.617472,3.800610,12.689969,21.234556,41.837548,57.871455),c(0.4119000,1.017279,1.948795,3.251323,8.151518,16.357612,26.346677,44.3451615)
,c(0.7559071,1.893939,6.638138,10.768193,32.314081,52.314081,1.432456*60,1.923246*60),c(3.0558748,4.924836,6.725978,8.611932,14.846261,31.433512,45.224552,1.232144*60),c(3.2558748,6.24836,8.725978,11.611932,19.846261,41.433512,55.224552,1.432144*60)
,c(21.13569,36.79268,1.203131*60,1.410666*60,2.668866*60,4.864975*60,6.835746*60,8.723412*60),c(2.6236236,5.929470,23.277721,58.607537,2.202655*60,4.322341*60,5.932356*60,7.2314145*60),c(14.79699,20.30331,33.49413,47.34737,1.017999*60,1.823722*60,3.406611*60,5.623511*60),c(12.91489,19.08114,37.55844,47.44161,1.260444*60,3.320071*60,4.285228*60,6.281603*60))
df = data.frame(time = time, cells = cells,type = type)
f7 = ggplot(data = df, mapping = aes(x = cells, y = time, colour = type)) + geom_line()
ggsave(plot=f7,height=6,width=8,dpi=200, filename="~/f7.pdf", useDingbats=FALSE)
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
mem <-c(c(44.6/1024,88.6/1024,177/1024,265/1024,443/1024,765/1024,1120/1024,1620/1024),c(14.7,28.1,59.4,86.4,147,435,577,827),c(2.04,8.08,32.2,72.2,200,510,810,1202)
,c(60.7,88,152,207,335,677,823,1100),c(62.7,89,154,217,365,697,913,1200),c(115/1024,170/1024,246/1024,318/1024,366/1024,5.1,7.2,12.3),c(79.6,152,296,440,734,1320,1755.6,2440),c(26.1,26.7,28,29.3,32,38.5,45.1,55.2),c(47.3,56.4,74.5,85.4,112,320,327,603))
df = data.frame(mem = mem, cells = cells,type = type)
s8 = ggplot(data = df, mapping = aes(x = cells, y = mem, colour = type)) + geom_line()
ggsave(plot=s8,height=6,width=8,dpi=200, filename="~/s8.pdf", useDingbats=FALSE)
load("D:/research/LDASVI/lda.svi-master/aaa3.0/donorBM0828_250.Rdata")
library(text2vec)
library(pryr)
set.seed(2022)
s1 = sample(1:533,250,replace = T)
s2 = sample(1:533,500,replace = T)
s3 = sample(1:533,1000,replace = T)
s4 = sample(1:533,2000,replace = T)
s5 = sample(1:533,3000,replace = T)
s6 = sample(1:533,5000,replace = T)
s7 = sample(1:533,10000,replace = T)
s8 = sample(1:533,15000,replace = T)
s9 = sample(1:533,20000,replace = T)
sc_data_250 = data_donorBM0828$Y[,s1]
label_mat_250 = unlist(data_donorBM0828$label.mat)[s1]
library(R.matlab)
####load data
path <- ("C:/Users/TEMP.LAPTOP-E3SPELVB.000/OneDrive - The Chinese University of Hong Kong/study/research/RefLDA/data")
pathname5<- file.path(path, "Y_donorBM0828.mat")
data_donorBM0828 <- readMat(pathname5)
sc_data_250 = data_donorBM0828$Y[,s1]
label_mat_250 = unlist(data_donorBM0828$label.mat)[s1]
perplexity(t(sc_data_250),donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
perplexity(t(as(sc_data_250,"sparseMatrix")),donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
b = as(sc_data_250,"sparseMatrix")
b
perplexity(b,donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
Matrix::RsparseMatrix
docvoc2dtm = function(doc_voc){
if(length(which(colSums(doc_voc) == 0))>0){
doc_voc = doc_voc[,-which(colSums(doc_voc) == 0)]
}
library(slam)
dtm = as.simple_triplet_matrix(doc_voc)
dimnames(dtm) = list(Docs = 1:dtm$nrow, Terms = 1:dtm$ncol)
return(dtm)
}
perplexity(docvoc2dtm(t(sc_data_250)),donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
b = as(sc_data_250,"RsparseMatrix")
perplexity(b,donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
perplexity = function(X, topic_word_distribution, doc_topic_distribution) {
p = X@p
j = X@j
x = X@x
ll = 0
for(i in 1:nrow(X)) {
p1 = p[[i]]
p2 = p[[i + 1L]]
pointer = p1 + seq_len(p2 - p1)
word_indices = j[pointer] + 1L
word_counds = x[pointer]
dot_prod = doc_topic_distribution[i, , drop = FALSE] %*%
topic_word_distribution[ , word_indices, drop = FALSE]
ll = ll +  log(dot_prod + EPS) %*% word_counds
}
# drop dimensions
ll = as.numeric(ll)
exp(-ll / sum(X@x))
}
perplexity(b,donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
perplexity = function(X, topic_word_distribution, doc_topic_distribution) {
EPS = 1e-16
p = X@p
j = X@j
x = X@x
ll = 0
for(i in 1:nrow(X)) {
p1 = p[[i]]
p2 = p[[i + 1L]]
pointer = p1 + seq_len(p2 - p1)
word_indices = j[pointer] + 1L
word_counds = x[pointer]
dot_prod = doc_topic_distribution[i, , drop = FALSE] %*%
topic_word_distribution[ , word_indices, drop = FALSE]
ll = ll +  log(dot_prod + EPS) %*% word_counds
}
# drop dimensions
ll = as.numeric(ll)
exp(-ll / sum(X@x))
}
perplexity(b,donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
perplexity(docvoc2dtm(t(sc_data_250)),donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
perplexity(t(as(sc_data_250,"sparseMatrix")),donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
b = t(as(sc_data_250,"sparseMatrix"))
View(sc_data_250)
b = as(sc_data_250,"sparseMatrix")
b = as(t(sc_data_250),"sparseMatrix")
perplexity(b,donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
b@i
perplexity = function(X, topic_word_distribution, doc_topic_distribution) {
EPS = 1e-16
p = X@p
j = X@i
x = X@x
ll = 0
for(i in 1:nrow(X)) {
p1 = p[[i]]
p2 = p[[i + 1L]]
pointer = p1 + seq_len(p2 - p1)
word_indices = j[pointer] + 1L
word_counds = x[pointer]
dot_prod = doc_topic_distribution[i, , drop = FALSE] %*%
topic_word_distribution[ , word_indices, drop = FALSE]
ll = ll +  log(dot_prod + EPS) %*% word_counds
}
# drop dimensions
ll = as.numeric(ll)
exp(-ll / sum(X@x))
}
perplexity(b,donorBM0828_250$RefTM$sc[[1]]$beta,donorBM0828_250$RefTM$sc[[1]]$theta)
perplexity(b,donorBM0828_250$RefTM$sc[[2]]$beta,donorBM0828_250$RefTM$sc[[2]]$theta)
perplexity(b,donorBM0828_250$RefTM$sc[[3]]$beta,donorBM0828_250$RefTM$sc[[3]]$theta)
perplexity(b,donorBM0828_250$RefTM$sc[[4]]$beta,donorBM0828_250$RefTM$sc[[4]]$theta)
b =docvoc2dtm(t(sc_data_250))
n
b
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
mem <-c(c(44.6/1024,88.6/1024,177/1024,265/1024,443/1024,765/1024,1120/1024,1620/1024),c(14.7,28.1,59.4,86.4,147,435,577,827),c(2.04,8.08,32.2,72.2,200,510,810,1202)
,c(60.7,88,152,207,335,677,823,1100),c(62.7,89,154,217,365,697,913,1200),c(115/1024,170/1024,246/1024,318/1024,366/1024,5.1,7.2,12.3),c(79.6,152,296,440,734,1320,1755.6,2440),c(26.1,26.7,28,29.3,32,38.5,45.1,55.2),c(47.3,56.4,74.5,85.4,112,320,327,603))
df = data.frame(mem = mem, cells = cells,type = type)
s8 = ggplot(data = df, mapping = aes(x = cells, y = mem, colour = type)) + geom_line()
ggsave(plot=s8,height=6,width=8,dpi=200, filename="~/s8.pdf", useDingbats=FALSE)
library(ggthemes)
library(ggplot2)
cells <- rep(c(500,1000,2000,3000,5000,10000,15000,20000), times = 9)
type <- rep(c('Scasat','Cusanovich2018','SnapATAC','Signac','ArchR','cisTopic','RA3','RefTM-STM','RefTM-LDA'),each = 8)
mem <-c(c(44.6/1024,88.6/1024,177/1024,265/1024,443/1024,765/1024,1120/1024,1620/1024),c(14.7,28.1,59.4,86.4,147,435,577,827),c(2.04,8.08,32.2,72.2,200,510,810,1202)
,c(60.7,88,152,207,335,677,823,1100),c(62.7,89,154,217,365,697,913,1200),c(115/1024,170/1024,246/1024,318/1024,366/1024,5.1,7.2,12.3),c(79.6,152,296,440,734,1320,1755.6,2440),c(26.1,26.7,28,29.3,32,38.5,45.1,55.2),c(47.3,56.4,74.5,85.4,112,320,327,603))
df = data.frame(mem = mem, cells = cells,type = type)
s8 = ggplot(data = df, mapping = aes(x = cells, y = mem, colour = type)) + geom_line()
ggsave(plot=s8,height=6,width=8,dpi=200, filename="~/s8.pdf", useDingbats=FALSE)
ggsave(plot=s8,height=6,width=15,dpi=200, filename="~/s8.pdf", useDingbats=FALSE)
ggsave(plot=s8,height=6,width=8,dpi=200, filename="~/s8.pdf", useDingbats=FALSE)
ggsave(plot=s8,height=6,width=15,dpi=200, filename="~/s8.pdf", useDingbats=FALSE)
